# BOj 13305. 주유소 / D2
'''
어떤 나라에 N개의 도시가 있다. 이 도시들은 일직선 도로 위에 있다. 편의상 일직선을 수평 방향으로 두자.
제일 왼쪽의 도시에서 제일 오른쪽의 도시로 자동차를 이용하여 이동하려고 한다.
인접한 두 도시 사이의 도로들은 서로 길이가 다를 수 있다. 도로 길이의 단위는 km를 사용한다.
처음 출발할 때 자동차에는 기름이 없어서 주유소에서 기름을 넣고 출발하여야 한다.
기름통의 크기는 무제한이어서 얼마든지 많은 기름을 넣을 수 있다. 도로를 이용하여 이동할 때 1km마다 1리터의 기름을 사용한다.
각 도시에는 단 하나의 주유소가 있으며, 도시 마다 주유소의 리터당 가격은 다를 수 있다. 가격의 단위는 원을 사용한다.

입력
표준 입력으로 다음 정보가 주어진다.
첫 번째 줄에는 도시의 개수를 나타내는 정수 N(2 ≤ N ≤ 100,000)이 주어진다.
다음 줄에는 인접한 두 도시를 연결하는 도로의 길이가 제일 왼쪽 도로부터 N-1개의 자연수로 주어진다.
다음 줄에는 주유소의 리터당 가격이 제일 왼쪽 도시부터 순서대로 N개의 자연수로 주어진다.
제일 왼쪽 도시부터 제일 오른쪽 도시까지의 거리는 1이상 1,000,000,000 이하의 자연수이다.
리터당 가격은 1 이상 1,000,000,000 이하의 자연수이다.

출력
표준 출력으로 제일 왼쪽 도시에서 제일 오른쪽 도시로 가는 최소 비용을 출력한다.
'''
import sys
input = sys.stdin.readline

N = int(input().strip())
len = [None]+list(map(int, input().split()))
gas = list(map(int, input().split()))

cost = 0
min_gas = gas[0]
for i in range(1, N):
    if min_gas > gas[i-1]:
        min_gas = gas[i-1]

    cost += min_gas * len[i]

# cost = min(gas[0:i]) * len[i]

print(cost)

'''
길보다 앞에 인덱스에 있는 Gas 값중에 가장 저렴한 Gas로 이 길을 지난다는 생각으로 문제 풀이
처음엔 슬라이싱으로 풀이
min_gas가 한번 정해지면 더 작은 값이 나올때 까지 변경되지 않는다는 점이 생각나서
if절로 변경
'''