# BOJ 2473. 세 용액 / D3
'''
문제
KOI 부설 과학연구소에서는 많은 종류의 산성 용액과 알칼리성 용액을 보유하고 있다.
각 용액에는 그 용액의 특성을 나타내는 하나의 정수가 주어져있다.
산성 용액의 특성값은 1부터 1,000,000,000까지의 양의 정수로 나타내고,
알칼리성 용액의 특성값은 -1부터 -1,000,000,000까지의 음의 정수로 나타낸다.

같은 양의 세 가지 용액을 혼합한 용액의 특성값은 혼합에 사용된 각 용액의 특성값의 합으로 정의한다.
이 연구소에서는 같은 양의 세 가지 용액을 혼합하여 특성값이 0에 가장 가까운 용액을 만들려고 한다.

예를 들어, 주어진 용액들의 특성값이 [-2, 6, -97, -6, 98]인 경우에는
특성값이 -97와 -2인 용액과 특성값이 98인 용액을 혼합하면 특성값이 -1인 용액을 만들 수 있고,
이 용액이 특성값이 0에 가장 가까운 용액이다.
참고로, 세 종류의 알칼리성 용액만으로나 혹은 세 종류의 산성 용액만으로 특성값이 0에 가장 가까운 혼합 용액을 만드는 경우도 존재할 수 있다.

산성 용액과 알칼리성 용액이 주어졌을 때,
이 중 같은 양의 세 개의 서로 다른 용액을 혼합하여 특성값이 0에 가장 가까운 용액을 만들어내는 세 용액을 찾는 프로그램을 작성하시오.

입력
첫째 줄에는 전체 용액의 수 N이 입력된다. N은 3 이상 5,000 이하의 정수이다.
둘째 줄에는 용액의 특성값을 나타내는 N개의 정수가 빈칸을 사이에 두고 주어진다.
이 수들은 모두 -1,000,000,000 이상 1,000,000,000 이하이다.
N개의 용액들의 특성값은 모두 다르고, 산성 용액만으로나 알칼리성 용액만으로 입력이 주어지는 경우도 있을 수 있다.

출력
첫째 줄에 특성값이 0에 가장 가까운 용액을 만들어내는 세 용액의 특성값을 출력한다.
출력해야하는 세 용액은 특성값의 오름차순으로 출력한다.
특성값이 0에 가장 가까운 용액을 만들어내는 경우가 두 개 이상일 경우에는 그 중 아무것이나 하나를 출력한다.
'''
import sys
input = sys.stdin.readline
N = int(input().strip())
liq = list(map(int, input().split()))

liq.sort()

def find_subset(liq):
    best = 1e10  # 충분히 큰 값(잘 설정해야함)
    ans = [0, 0, 0]
    for i in range(N - 2):
        l, r = i + 1, N - 1
        while l < r:
            s = liq[i] + liq[l] + liq[r]
            if abs(s) < abs(best): # 절댓값이 작을 수록 0에 가까움
                best = s
                ans = [liq[i], liq[l], liq[r]]
                if best == 0:  # 더 이상 좋아질 수 없음
                    return ans
            if s < 0:
                l += 1
            else:
                r -= 1
    return ans

ans_list = find_subset(liq)
print(' '.join(map(str, ans_list)))

'''
0에 가까운 조합을 찾아야함
조합으로 풀이할 수 잇지만 용액의 수가 증가하면 시간이 너무 오래걸림
포인터 방식을 활용하여 문제 풀이
먼저 액성을 정렬한 후
맨 뒤에 있는 액성(r) + i번째 + i+1(l)번째 로 시작해서
합이 음수일 경우 l의 크기를 키우고, 양수인 경우 r을 감소시키는 것을 반복하며 best를 최신화함
'''