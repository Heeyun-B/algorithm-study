# BOJ 3273. 두수의 합 / D2
'''
문제
n개의 서로 다른 양의 정수 a1, a2, ..., an으로 이루어진 수열이 있다.
ai의 값은 1보다 크거나 같고, 1000000보다 작거나 같은 자연수이다.
자연수 x가 주어졌을 때, ai + aj = x (1 ≤ i < j ≤ n)을 만족하는 (ai, aj)쌍의 수를 구하는 프로그램을 작성하시오.

입력
첫째 줄에 수열의 크기 n이 주어진다.
다음 줄에는 수열에 포함되는 수가 주어진다.
셋째 줄에는 x가 주어진다. (1 ≤ n ≤ 100000, 1 ≤ x ≤ 2000000)

출력
문제의 조건을 만족하는 쌍의 개수를 출력한다.
'''
import sys

input = sys.stdin.readline

n = int(input().strip())
arr = list(map(int, input().split()))
x = int(input())
cnt = 0
arr.sort()
i, j = 0, n-1

while i < j:
    s = arr[i] + arr[j]
    if s == x:
        cnt += 1
        i += 1
        j -= 1
    elif s < x:
        i +=1
    else:
        j -= 1

print(cnt)

'''
처음 문제 풀이는 조합으로 풀이 진행
조합의 경우의 수가 너무 많아서 시간 초과 발생
x보다 큰 경우 조합에 포함하지 않는 가지치기를 했지만 그래도 시간 초과

다른 방법을 생각하다가
리스트를 정렬하고
맨앞 + 맨뒤의 크기 기준으로
x보다 큰 경우, 합이 작아져야하므로 맨앞 + 맨뒤 인덱스 - 1
x보다 작은 경우, 합이 커져야하므로 맨앞 인덱스 + 1 + 맨뒤
x와 동일한 경우, 충족하므로 cnt 1 증가, 맨앞 인덱스 + 1 + 맨뒤 인덱스 - 1
이런식으로 리스트의 크기를 줄여가는 방식으로 진행
'''