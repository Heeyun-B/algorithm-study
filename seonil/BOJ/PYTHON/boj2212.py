"""
BOJ2212. 센서

[문제]
한국도로공사는 고속도로의 유비쿼터스화를 위해 고속도로 위에 N개의 센서를 설치하였다.
문제는 이 센서들이 수집한 자료들을 모으고 분석할 몇 개의 집중국을 세우는 일인데, 예산상의 문제로, 고속도로 위에 최대 K개의 집중국을 세울 수 있다고 한다.
각 집중국은 센서의 수신 가능 영역을 조절할 수 있다. 집중국의 수신 가능 영역은 고속도로 상에서 연결된 구간으로 나타나게 된다.
N개의 센서가 적어도 하나의 집중국과는 통신이 가능해야 하며, 집중국의 유지비 문제로 인해 각 집중국의 수신 가능 영역의 길이의 합을 최소화해야 한다.
편의를 위해 고속도로는 평면상의 직선이라고 가정하고, 센서들은 이 직선 위의 한 기점인 원점으로부터의 정수 거리의 위치에 놓여 있다고 하자.따라서, 각 센서의 좌표는 정수 하나로 표현된다.
이 상황에서 각 집중국의 수신 가능영역의 거리의 합의 최솟값을 구하는 프로그램을 작성하시오.
단, 집중국의 수신 가능영역의 길이는 0 이상이며 모든 센서의 좌표가 다를 필요는 없다.

[입력]
첫째 줄에 센서의 개수 N(1 ≤ N ≤ 10,000), 둘째 줄에 집중국의 개수 K(1 ≤ K ≤ 1000)가 주어진다. 셋째 줄에는 N개의 센서의 좌표가 한 개의 정수로 N개 주어진다. 각 좌표 사이에는 빈 칸이 하나 있으며, 좌표의 절댓값은 1,000,000 이하이다.

[출력]
첫째 줄에 문제에서 설명한 최대 K개의 집중국의 수신 가능 영역의 길이의 합의 최솟값을 출력한다.
"""
import sys
input = lambda: sys.stdin.readline().rstrip()

def min_coverage_length(sensors, N, K): # K개의 집중국에 대하여 수신 가능영역의 합의 최솟값을 구하는 함수
    sensors.sort()  # 센서를 원점으로부터의 거리 기준 오름차순으로 정렬
    dists = [0] * (N - 1)   # 입력 센서들 간의 거리를 저장할 배열 dists를 0으로 초기화
    for i in range(N - 1):  # dists에 입력 센서들 사이의 거리 정보 저장
        dists[i] = sensors[i + 1] - sensors[i]
    dists.sort()    # 입력 센서 사이의 거리를 오름차순으로 정렬
    return sum(dists[:N - K])   # 입력 센서 간 거리가 가장 먼 것부터 (K-1)개를 제외하고 더함

# main
N = int(input())    # N: 센서의 개수
K = int(input())    # K: 집중국의 개수
sensors = list(map(int, input().split()))   # N개의 센서 정보 입력 받기
result = min_coverage_length(sensors, N, K) # K개의 집중국에 대하여 수신 가능영역의 합의 최솟값을 구해 result에 저장
print(result)   # 결과값 반환